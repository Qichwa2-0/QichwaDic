apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 33

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.ocram.qichwadic"
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 22
        versionName "3.3.0"
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
        buildConfigField "boolean", "DEBUGGABLE", 'false'
        buildConfigField "String", "SERVER_URL", '"https://www.api.qichwa.net/simitaqi/"'
        buildConfigField "String", "DEV_EMAIL", '"qichwa2.0@gmail.com"'
    }

    applicationVariants.all { variant ->
        variant.resValue "string", "versionName", "v${variant.versionName}"
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "DEBUGGABLE", 'true'
            buildConfigField "String", "SERVER_URL", '"https://www.api.qichwa.net/simitaqi/"'
            minifyEnabled false
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/atomicfu.kotlin_module']
        }
    }
    namespace 'com.ocram.qichwadic'

}

dependencies {

    // Kotlin components
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "androidx.core:core-ktx:$corektx"

    // Support
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"
    implementation "androidx.cardview:cardview:$cardview"
    implementation "com.google.android.material:material:$material"

    // Architecture components
    // room
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.appcompat:appcompat:$appcompat"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleExtensionsVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$archLifecycleVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Retrofit / LeakCanary
    implementation "com.squareup.retrofit2:retrofit:$retrofit2"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2gson"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanary"

    // Testing
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$extjunit"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation "androidx.test:runner:$testrunner"

    // other deps
    implementation "com.github.AppIntro:AppIntro:$appIntro"

    // Resolve conflicts between main and test APK:
    implementation "androidx.annotation:annotation:$annotation"
    androidTestImplementation "androidx.appcompat:appcompat:$appcompat"
    androidTestImplementation "com.google.android.material:material:$material"

    // koin
    implementation "io.insert-koin:koin-android:$koin_version"
}
